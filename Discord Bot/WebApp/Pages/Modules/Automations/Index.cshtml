@page
@using WebApp.Pages.Partials
@model WebApp.Pages.Modules.Automations.IndexModel
@{
}
@Html.AntiForgeryToken()
<nav class="nav">
    <a class="nav-link active" aria-current="page" asp-page="/Home/Guilds">Guilds</a>
	<a class="nav-link active" aria-current="page" asp-page="/Home/Modules" asp-route-id="@Model.Guild.Id" asp-route-name="@Model.Guild.Name">Modules</a>
</nav>
<br />
<div>
	<h2 class="text-primary">Automations</h2>
</div>
<br /><br />
<div class="container p-3">
	<table class="table table-bordered table-striped" style="width:100%">
		<thead>
			<tr>
				<th>
					When
				</th>
				<th>
					If
				</th>
				<th>
					Do
				</th>
				<th>
					After
				</th>
			</tr>
		</thead>
		<tbody id="TableRows">
			<tr id="Row">
				@{
					int packageIndex = 0;
				}
				@foreach (var package in Model.Packages)
				{
					<form method="post" asp-page-handler="Save">
					@{int index = 0;
					}

					<input asp-for="@Model.SavedInfo.Auto.Id" value="@package.Auto.Id" hidden>
					<input asp-for="@Model.SavedInfo.Auto.GuildId" value="@Model.Guild.Id" hidden>
					<td id="Top">
					@foreach (var whens in package.When)
					{
							<div id="Display">
								<p id="NameDisplay">
								</p>
								@await Html.PartialAsync("/Pages/Partials/_AutomationDropdown.cshtml", new AutomationDropdownModel() { ButtonName = "Select Option", Automations = Model.WhenAutomations, AddNoneOption = true, DropdownId = "whenDropdown" })
								<input asp-for="@Model.SavedInfo.When[index].Value" value="@whens.Value">
								<input asp-for="@Model.SavedInfo.When[index].Id" value="@whens.Id" hidden>
								<input asp-for="@Model.SavedInfo.When[index].Type" value="@whens.Type" hidden>
								<input asp-for="@Model.SavedInfo.When[index].SelectedOption" value="@whens.SelectedOption" id="dropdownOption">
							</div>
						index++;
					}
					</td>
					@{ index = 0;
					}
					<td id="Top">
					@foreach (var ifs in package.If)
					{
							<div id="Display">
								<p id="NameDisplay">
								</p>
								@await Html.PartialAsync("/Pages/Partials/_AutomationDropdown.cshtml", new AutomationDropdownModel() { ButtonName = "Select Option", Automations = Model.IfAutomations, AddNoneOption = true, DropdownId = "ifDropdown" })
								<input asp-for="@Model.SavedInfo.If[index].Value" value="@ifs.Value">
								<input asp-for="@Model.SavedInfo.If[index].Id" value="@ifs.Id" hidden>
								<input asp-for="@Model.SavedInfo.If[index].Type" value="@ifs.Type" hidden>
								<input asp-for="@Model.SavedInfo.If[index].SelectedOption" value="@ifs.SelectedOption" hidden>
								<button class="btn btn-primary mx-2" id="Add">
									Add
								</button>
							</div>
						index++;
					}
					</td>
					@{ index = 0;
					}
					<td id="Top">
					@foreach (var dos in package.Do)
					{
							<div id="Display">
								<p id="NameDisplay">
								</p>
								@await Html.PartialAsync("/Pages/Partials/_AutomationDropdown.cshtml", new AutomationDropdownModel() { ButtonName = "Select Option", Automations = Model.DoAutomations, AddNoneOption = true, DropdownId = "doDropdown" })
								<input asp-for="@Model.SavedInfo.Do[index].Value" value="@dos.Value">
								<input asp-for="@Model.SavedInfo.Do[index].Id" value="@dos.Id" hidden>
								<input asp-for="@Model.SavedInfo.Do[index].Type" value="@dos.Type" hidden>
								<input asp-for="@Model.SavedInfo.Do[index].SelectedOption" value="@dos.SelectedOption" hidden>
								<button class="btn btn-primary mx-2" id="Add">
									Add
								</button>
							</div>
						index++;
					}
					</td>
					<td>
						<input id="AfterInfo" value="">
					</td>
					<td>
						<button type="submit" class="btn btn-primary mx-2">
							Save
						</button>
						<button type="submit" class="btn btn-danger mx-2" id="delete">
							Delete
						</button>
					</td>
					</form>
					packageIndex++;
				}
			</tr>
			<button type="submit" id="addnew" class="btn btn-primary mx-2">
				New Item
			</button>
		</tbody>
	</table>
</div>

@section Scripts
	{
	<script>
		$(document).on("click", "#SelectedId", function () {
			var Id = $(this).val();
			var SelectedOption = $("#SelectedOption").text();  // Use this if the hidden <p> has a value
			var Name = $(this).text();
			var Div = $(this).closest("#Display");

			console.log(SelectedOption);

			if (Div.length != 0) {
				Div.find("#NameDisplay").text(Name);
				Div.find("#dropdownOption").val(parseInt(SelectedOption));
				return;
			}
		});
	</script>
	@if (ViewData["Message"] != null)
	{
		<script>
			window.onload = function () {
				alert("@ViewData["Message"]");
			};
		</script>
	}

	<script>
	$(document).on("click", "#Add", function () {
		createNewDiv($(this));

		function createNewDiv(element) {
			var ref = element.closest("#Display");

			var clonedElement = ref.clone();
			ref.after(clonedElement);

			if (ref.find("#deletechoice").length === 0) {

				var deleteElement = $("#delete").clone();
				deleteElement.attr('id', 'deletechoice');
				clonedElement.append(deleteElement);
			}
		}

		return;
	});
	</script>

	<script>
		$(document).on("click", "#deletechoice", function () {
		$(this).closest("#Display").remove();
		return;
	});
	</script>

	<script>
		$(document).on("click", "#delete", function () {
		//$(this).closest("#Row").remove();
		return;
	});
	</script>

	<script>
		$(document).on("click", "#addnew", function () {
			var ref = $("#Row");
			var newItem = ref.clone();
			ref.after(newItem);
		});
	</script>
}