// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230210102650_eighth")]
    partial class eighth
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Models.CurrencyAwarder", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("bigint unsigned");

                    b.Property<float>("OCH")
                        .HasColumnType("float");

                    b.Property<float>("SJH")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CurrencyAwarders");
                });

            modelBuilder.Entity("Models.CurrencyOwner", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("bigint unsigned");

                    b.Property<float>("OCH")
                        .HasColumnType("float");

                    b.Property<float>("SJH")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CurrencyOwners");
                });

            modelBuilder.Entity("Models.Guild", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("IsCurrentlyJoined")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.Property<ulong>("Id")
                        .HasColumnType("bigint unsigned");

                    b.Property<float>("Cost")
                        .HasColumnType("float");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Message")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Models.RoleSurvey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AllShouldBeTrue")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AllowMultiSelect")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("EndMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InitialMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong?>("ParentRoleId")
                        .IsRequired()
                        .HasColumnType("bigint unsigned");

                    b.Property<int?>("ParentSurveyId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentRoleId");

                    b.HasIndex("ParentSurveyId");

                    b.ToTable("RoleSurvey");
                });

            modelBuilder.Entity("Models.TaskCompletionRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("CurrencyAwarded")
                        .HasColumnType("float");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RecordDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaskDate")
                        .HasColumnType("longtext");

                    b.Property<string>("TaskEvidence")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TimeTaken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TimeTakenEvidence")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Verifiers")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TaskCompletionRecords");
                });

            modelBuilder.Entity("RoleRoleSurvey", b =>
                {
                    b.Property<ulong>("ConditionRolesId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("PartOfRoleSurveysAsConditionId")
                        .HasColumnType("int");

                    b.HasKey("ConditionRolesId", "PartOfRoleSurveysAsConditionId");

                    b.HasIndex("PartOfRoleSurveysAsConditionId");

                    b.ToTable("RoleRoleSurvey");
                });

            modelBuilder.Entity("RoleRoleSurvey1", b =>
                {
                    b.Property<ulong>("OptionRolesId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("PartOfRoleSurveysAsOptionId")
                        .HasColumnType("int");

                    b.HasKey("OptionRolesId", "PartOfRoleSurveysAsOptionId");

                    b.HasIndex("PartOfRoleSurveysAsOptionId");

                    b.ToTable("RoleRoleSurvey1");
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.HasOne("Models.Guild", "Guild")
                        .WithMany("Roles")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("Models.RoleSurvey", b =>
                {
                    b.HasOne("Models.Role", "ParentRole")
                        .WithMany("RoleSurveys")
                        .HasForeignKey("ParentRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.RoleSurvey", "ParentSurvey")
                        .WithMany("ChildSurveys")
                        .HasForeignKey("ParentSurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentRole");

                    b.Navigation("ParentSurvey");
                });

            modelBuilder.Entity("RoleRoleSurvey", b =>
                {
                    b.HasOne("Models.Role", null)
                        .WithMany()
                        .HasForeignKey("ConditionRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.RoleSurvey", null)
                        .WithMany()
                        .HasForeignKey("PartOfRoleSurveysAsConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoleRoleSurvey1", b =>
                {
                    b.HasOne("Models.Role", null)
                        .WithMany()
                        .HasForeignKey("OptionRolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.RoleSurvey", null)
                        .WithMany()
                        .HasForeignKey("PartOfRoleSurveysAsOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Models.Guild", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Models.Role", b =>
                {
                    b.Navigation("RoleSurveys");
                });

            modelBuilder.Entity("Models.RoleSurvey", b =>
                {
                    b.Navigation("ChildSurveys");
                });
#pragma warning restore 612, 618
        }
    }
}
